{"version":3,"file":"829.js","mappings":"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","sources":["webpack://loatus_web/./hooks/useSWRRetry.ts","webpack://loatus_web/./components/Header/index.tsx","webpack://loatus_web/./layouts/MainPage/index.tsx","webpack://loatus_web/./utils/fetcher.ts"],"sourcesContent":["import useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport { StateMutator } from 'swr-global-state';\n\nconst useSWRRetry = <T = any>(url: string | null, refreshToken: string) =>\n  useSWR<T | null>(\n    url && localStorage.getItem('accessToken') ? [url, localStorage.getItem('accessToken')] : null,\n    fetcher,\n    {\n      onErrorRetry: (err, key, config, revalidate, { retryCount }) => {\n        if (retryCount < 3) {\n          axios\n            .post(\n              process.env.REACT_APP_DB_HOST + '/auth/reissue',\n              {},\n              {\n                withCredentials: false,\n                headers: {\n                  Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                  refreshToken: refreshToken,\n                },\n              },\n            )\n            .then((res) => {\n              localStorage.setItem('accessToken', res.data.data);\n            })\n            .catch((error) => error);\n        }\n      },\n    },\n  );\n\nexport default useSWRRetry;\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport useToken from '@hooks/useToken';\nimport { useCookies } from 'react-cookie';\nimport useSWRRetry from '@hooks/useSWRRetry';\nimport { useCallback } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport gravatar from 'gravatar';\n\nconst pages = [\n  { name: '파티구하기', param: '/channels' },\n  { name: '커뮤니티', param: '/board/lists' },\n  { name: '매칭', param: '/matching' },\n];\n\nfunction Header() {\n  const accessToken = localStorage.getItem('accessToken');\n  const [token] = useCookies(['refreshToken']);\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n  const { data: userData, error, mutate } = useSWRRetry(process.env.REACT_APP_DB_HOST + '/auth/my', token.refreshToken);\n\n  const onClickLogout = useCallback(() => {\n    axios\n      .get(process.env.REACT_APP_DB_HOST + '/auth/logout', {\n        headers: {\n          Authorization: 'Bearer ' + accessToken,\n        },\n        withCredentials: false,\n      })\n      .then((response) => {\n        toast.success(response.data.message, {\n          position: 'top-right',\n        });\n        mutate(null);\n      })\n      .catch((error) => {\n        toast.error('오류가 발생했습니다.\\n기술팀에 문의하세요!', {\n          position: 'top-right',\n        });\n      });\n  }, []);\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component={Link}\n            to=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'Noto Sans KR, sans-serif',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            LOATUS\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                component={Link}\n                key={page.name}\n                to={page.param}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page.name}\n              </Button>\n            ))}\n          </Box>\n          <Box sx={{ flexGrow: 0 }}>\n            {userData ? (\n              <>\n                <Tooltip title=\"Open settings\">\n                  <div>\n                    <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                      <Avatar\n                        alt={userData.characterName || userData.nickname}\n                        src={userData.profileImage || gravatar.url(userData.email, { s: '25', d: 'retro' })}\n                      />\n                      &nbsp;<span>{userData.characterName || userData.nickname}</span>\n                    </IconButton>\n                  </div>\n                </Tooltip>\n                <Menu\n                  sx={{ mt: '45px' }}\n                  id=\"menu-appbar\"\n                  anchorEl={anchorElUser}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={Boolean(anchorElUser)}\n                  onClose={handleCloseUserMenu}\n                >\n                  <MenuItem component={Link} to=\"/my\" onClick={handleCloseUserMenu}>\n                    <Typography textAlign=\"center\">프로필</Typography>\n                  </MenuItem>\n                  <MenuItem component={Link} to={userData.stoveNo ? '/select' : '/auth'} onClick={handleCloseUserMenu}>\n                    <Typography textAlign=\"center\">{userData.stoveNo ? '대표캐릭터 설정' : '인증'}</Typography>\n                  </MenuItem>\n                  <MenuItem onClick={onClickLogout}>\n                    <Typography textAlign=\"center\">로그아웃</Typography>\n                  </MenuItem>\n                </Menu>\n              </>\n            ) : (\n              <Typography\n                textAlign=\"center\"\n                variant=\"h6\"\n                noWrap\n                component={Link}\n                to={'/login'}\n                sx={{\n                  mr: 2,\n                  display: { xs: 'none', md: 'flex' },\n                  fontFamily: 'Noto Sans KR, sans-serif',\n                  fontWeight: 700,\n                  letterSpacing: '.3rem',\n                  color: 'inherit',\n                  textDecoration: 'none',\n                }}\n              >\n                로그인\n              </Typography>\n            )}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default Header;\n","import React from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Outlet } from 'react-router';\r\nimport Header from '@components/Header';\r\nimport { Container, createTheme, Grid, ThemeProvider } from '@mui/material';\r\n\r\nconst MainPage = () => {\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#525252',\r\n        contrastText: '#000000',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <Header />\r\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n          <Grid item style={{ paddingTop: '2rem' }}>\r\n            <Outlet />\r\n          </Grid>\r\n        </Grid>\r\n        <ToastContainer />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import axios from 'axios';\n\nconst fetcher = async ([url, token]: string[]) => {\n  const res = await axios\n    .get(url, {\n      withCredentials: false,\n      headers: token\n        ? {\n            Authorization: `Bearer ${token}`,\n          }\n        : {},\n    })\n    .then((response) => response.data.data)\n    .catch((error) => null);\n  if (res === null) {\n    const error = new Error('errro');\n    throw error;\n  }\n\n  return res;\n};\n\nexport default fetcher;\n"],"names":["url","refreshToken","useSWR","localStorage","getItem","fetcher","onErrorRetry","err","key","config","revalidate","retryCount","axios","process","withCredentials","headers","Authorization","then","res","setItem","data","catch","error","pages","name","param","accessToken","token","useCookies","React","setAnchorElNav","anchorElUser","setAnchorElUser","useSWRRetry","userData","mutate","onClickLogout","useCallback","response","toast","message","position","handleCloseNavMenu","handleCloseUserMenu","AppBar","Container","maxWidth","Toolbar","disableGutters","Adb","sx","display","xs","md","mr","Typography","variant","noWrap","component","Link","to","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","map","page","Button","onClick","my","Tooltip","title","IconButton","event","currentTarget","p","Avatar","alt","characterName","nickname","src","profileImage","gravatar","email","s","d","Menu","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textAlign","stoveNo","darkTheme","createTheme","palette","primary","main","contrastText","ThemeProvider","theme","Grid","container","direction","justifyContent","alignItems","item","style","paddingTop","Error"],"sourceRoot":""}