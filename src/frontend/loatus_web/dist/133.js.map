{"version":3,"file":"133.js","mappings":";gPAYA,QARiB,SAAUA,GACvB,QAAmD,MAAzBC,EAAAA,EAAAA,UAAYD,KAAa,o5BAA5CE,EAAK,KAAEC,EAAQ,KAItB,MAAO,CAACD,GAHcE,EAAAA,EAAAA,cAAY,SAACC,GAC/BF,EAASE,EAAEC,OAAOJ,MACtB,GAAG,CAACC,IAC0BA,EAClC,4PCRO,IAAMI,EAASC,EAAAA,EAAAA,OAAa,+IAQtBC,EAAOD,EAAAA,EAAAA,IAAU,uLAQjBE,EAASF,EAAAA,EAAAA,OAAa,8nBA6BtBG,EAAKH,EAAAA,EAAAA,GAAS,iHAQdI,EAAUJ,EAAAA,EAAAA,IAAU,yGAOpBK,EAAOL,EAAAA,EAAAA,IAAU,wLAWjBM,EAAWN,EAAAA,EAAAA,GAAS,qYAepBO,EAAQP,EAAAA,EAAAA,MAAY,iTAapBQ,EAASR,EAAAA,EAAAA,IAAU,ulBCpGhC,2pNAqBA,QApBa,eADb,EACa,GADb,EACa,UAAG,2FAAkB,OADlC,EACgB,IADhB,4CACgB,IADhB,m2BACwBS,EAAG,KAAEC,EAAK,cACdC,EAAAA,EAAAA,IACXF,EAAK,CACRG,iBAAiB,EACjBC,QAASH,EACL,CACEI,cAAe,UAAF,OAAYJ,IAE3B,CAAC,IAENK,MAAK,SAACC,GAAQ,OAAKA,EAASC,KAAKA,IAAI,IACrCC,OAAM,SAACC,GAAK,OAAK,IAAI,IAAC,OAVhB,GAWG,QAXNC,EAAM,EAAH,MAWO,gBACkB,MAAlB,IAAIC,MAAM,SACb,gCAGND,GAAG,iCAlBZ,OAkBY,SAlBZ,+KAmBC,gBAlBY","sources":["webpack://loatus_web/./hooks/useInput.ts","webpack://loatus_web/./pages/Login/styles.tsx","webpack://loatus_web/./utils/fetcher.ts"],"sourcesContent":["import {useState, useCallback, ChangeEvent, Dispatch} from \"react\";\r\nimport React from \"react\";\r\n\r\ntype ReturnTypes<T = any> = [T, (e:any)=>void, Dispatch<React.SetStateAction<T>>];\r\nconst useInput = <T = any>(DefaultValue: T):ReturnTypes => {\r\n    const [value, setValue] = useState<T>(DefaultValue);\r\n    const onChangeValue = useCallback((e:any)=>{\r\n        setValue(e.target.value);\r\n    }, [setValue])\r\n    return [value, onChangeValue, setValue]\r\n}\r\n\r\nexport default useInput;","import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  padding: 48px 0 40px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Root = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100%;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  -webkit-tap-highlight-color: transparent;\r\n  align-items: center;\r\n  -webkit-appearance: none;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  outline: none;\r\n  position: relative;\r\n  text-align: center;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n  white-space: nowrap;\r\n  box-shadow: none;\r\n  transition: all 80ms linear;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  min-width: 96px;\r\n  background-color: #fff;\r\n  border: 2.5px solid #000000;\r\n  color: #000000;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Hr = styled.hr`\r\n  border: none;\r\n  border-top: 1px solid #ddd;\r\n  clear: both;\r\n  flex-grow: 1;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Horizon = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const Page = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  flex-shrink: 0;\r\n  max-width: 800px;\r\n  width: 100%;\r\n  box-sizing: inherit;\r\n`;\r\n\r\nexport const PageHead = styled.h1`\r\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\r\n  font-size: 60px;\r\n  font-weight: 700;\r\n  letter-spacing: -0.75px;\r\n  line-height: 46px;\r\n  margin-bottom: 10px;\r\n  max-width: 700px;\r\n  text-align: center;\r\n  margin-block-start: 0.67em;\r\n  margin-block-end: 0.67em;\r\n  margin-inline-start: 0px;\r\n  margin-inline-end: 0px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 11px 12px 13px;\r\n  height: 44px;\r\n  font-size: 18px;\r\n  line-height: 1.33333333;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  border: 1px solid rgba(29, 28, 29, 0.3);\r\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px;\r\n`;\r\n\r\nexport const SignIn = styled.div`\r\n  font-size: 15px;\r\n  line-height: 1.46668;\r\n  font-weight: initial;\r\n  color: #1d1c1d;\r\n  font-variant-ligatures: common-ligatures;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-font-smoothing: antialiased;\r\n  display: block;\r\n  width: 400px;\r\n  & a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import axios from 'axios';\r\n\r\nconst fetcher = async ([url, token]: string[]) => {\r\n  const res = await axios\r\n    .get(url, {\r\n      withCredentials: true,\r\n      headers: token\r\n        ? {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        : {},\r\n    })\r\n    .then((response) => response.data.data)\r\n    .catch((error) => null);\r\n  if (res === null) {\r\n    const error = new Error('errro');\r\n    throw error;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport default fetcher;\r\n"],"names":["DefaultValue","useState","value","setValue","useCallback","e","target","Header","styled","Root","Button","Hr","Horizon","Page","PageHead","Input","SignIn","url","token","axios","withCredentials","headers","Authorization","then","response","data","catch","error","res","Error"],"sourceRoot":""}