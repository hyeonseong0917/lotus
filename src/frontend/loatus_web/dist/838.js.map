{"version":3,"file":"838.js","mappings":"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","sources":["webpack://loatus_web/./hooks/useInput.ts","webpack://loatus_web/./hooks/useSWRRetry.ts","webpack://loatus_web/./hooks/useTokenAxios.ts","webpack://loatus_web/./pages/Auth/index.tsx","webpack://loatus_web/./utils/fetcher.ts"],"sourcesContent":["import {useState, useCallback, ChangeEvent, Dispatch} from \"react\";\r\nimport React from \"react\";\r\n\r\ntype ReturnTypes<T = any> = [T, (e:any)=>void, Dispatch<React.SetStateAction<T>>];\r\nconst useInput = <T = any>(DefaultValue: T):ReturnTypes => {\r\n    const [value, setValue] = useState<T>(DefaultValue);\r\n    const onChangeValue = useCallback((e:any)=>{\r\n        setValue(e.target.value);\r\n    }, [setValue])\r\n    return [value, onChangeValue, setValue]\r\n}\r\n\r\nexport default useInput;","import useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport { StateMutator } from 'swr-global-state';\n\nconst useSWRRetry = <T = any>(url: string | null, refreshToken: string) =>\n  useSWR<T | null>(\n    url && localStorage.getItem('accessToken') ? [url, localStorage.getItem('accessToken')] : null,\n    fetcher,\n    {\n      onErrorRetry: (err, key, config, revalidate, { retryCount }) => {\n        if (retryCount < 3) {\n          axios\n            .post(\n              '/auth/reissue',\n              {},\n              {\n                withCredentials: true,\n                headers: {\n                  Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                  refreshToken: refreshToken,\n                },\n              },\n            )\n            .then((res) => {\n              localStorage.setItem('accessToken', res.data.data);\n            })\n            .catch((error) => error);\n        }\n      },\n    },\n  );\n\nexport default useSWRRetry;\n","import axios from 'axios';\r\nimport { StateMutator } from 'swr-global-state';\r\n\r\nconst useTokenAxios = (refreshToken: string) => {\r\n  const tokenAxios = axios.create();\r\n  tokenAxios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      axios\r\n        .post(\r\n          '/auth/reissue',\r\n          {},\r\n          {\r\n            withCredentials: true,\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\r\n              refreshToken: refreshToken,\r\n            },\r\n          },\r\n        )\r\n        .then((res) => {\r\n          localStorage.setItem('accessToken', res.data.data);\r\n        })\r\n        .catch((error) => error);\r\n    },\r\n  );\r\n  return tokenAxios;\r\n};\r\n\r\nexport default useTokenAxios;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { FormControl, FormHelperText, Input, InputLabel, StepContent, TextField } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport useTokenAxios from '@hooks/useTokenAxios';\r\nimport { AxiosResponse } from 'axios/index';\r\nimport { APIItem, lostarkInfo } from '@typings/db';\r\nimport { toast } from 'react-toastify';\r\nimport useToken from '@hooks/useToken';\r\nimport { useCookies } from 'react-cookie';\r\nimport useInput from '@hooks/useInput';\r\nimport CharacterSelect from '@components/CharacterSelect';\r\nimport useSWRRetry from '@hooks/useSWRRetry';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router';\r\n\r\nexport default function Auth() {\r\n  const navigate = useNavigate();\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  const [token, setToken] = useCookies(['refreshToken']);\r\n  const { data: userData, error, mutate } = useSWRRetry('/auth/my', token.refreshToken);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set<number>());\r\n  const [randomCode, setRandomCode] = useState('');\r\n  const steps = ['스토브 로그인', '소개글에 인증코드 게시', '인증하기'];\r\n  const [stoveUrl, onChangeStoveUrl, setStoveUrl] = useInput('');\r\n  const onClickCopyClipBoard = useCallback(async () => {\r\n    if (!randomCode) {\r\n      return;\r\n    }\r\n    try {\r\n      await navigator.clipboard.writeText(randomCode);\r\n      toast.success('인증코드가 클립보드에 복사되었습니다', {\r\n        position: 'top-right',\r\n      });\r\n    } catch (e) {\r\n      toast.error('복사에 실패했습니다.', {\r\n        position: 'top-right',\r\n      });\r\n    }\r\n  }, [randomCode]);\r\n  const onSubmitAuthInfo = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      useTokenAxios(token.refreshToken)\r\n        .post(\r\n          '/auth/stove',\r\n          {\r\n            randomCode,\r\n            stoveUrl,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n            headers: {\r\n              Authorization: 'Bearer ' + accessToken,\r\n            },\r\n          },\r\n        )\r\n        .then((response: AxiosResponse<APIItem<lostarkInfo[]>>) => {\r\n          if (response.data.code === 200) {\r\n            toast.success(response.data.message, {\r\n              position: 'top-right',\r\n            });\r\n          } else {\r\n            toast.error(response.data.message, {\r\n              position: 'top-right',\r\n            });\r\n            return;\r\n          }\r\n          mutate();\r\n          navigate('/select');\r\n        })\r\n        .catch((error) => {\r\n          toast.error('오류가 발생했습니다.\\n기술팀에 문의해주세요!', {\r\n            position: 'top-right',\r\n          });\r\n        });\r\n    },\r\n    [randomCode, stoveUrl],\r\n  );\r\n  const introduce = [\r\n    <>\r\n      <Typography sx={{ mt: 2, mb: 1 }}>스토브 사이트에서 로그인해주세요</Typography>\r\n      <Button onClick={() => window.open('https://www.onstove.com/')}>스토브 가기</Button>\r\n    </>,\r\n    <>\r\n      <Typography sx={{ mt: 2, mb: 1 }}>소개글에 아래의 인증코드를 게시해주세요</Typography>\r\n      <Input readOnly id=\"component-disabled\" value={randomCode || '값을 불러올 수 없습니다'} sx={{ color: 'gray' }} />\r\n      <Button onClick={onClickCopyClipBoard}>복사</Button>\r\n    </>,\r\n    <>\r\n      <Typography sx={{ mt: 2, mb: 1 }}>소개글을 게시한 타임라인 url을 입력하고 인증하기를 눌러주세요</Typography>\r\n      <form onSubmit={onSubmitAuthInfo}>\r\n        <FormControl fullWidth required>\r\n          <TextField onChange={onChangeStoveUrl} value={stoveUrl} variant={'filled'} />\r\n          <Button type=\"submit\">인증하기</Button>\r\n        </FormControl>\r\n      </form>\r\n    </>,\r\n  ];\r\n\r\n  useEffect(() => {\r\n    useTokenAxios(token.refreshToken)\r\n      .get('/auth/randomcode', {\r\n        withCredentials: true,\r\n        headers: {\r\n          Authorization: 'Bearer ' + accessToken,\r\n        },\r\n      })\r\n      .then((response: AxiosResponse<APIItem<string>>) => {\r\n        setRandomCode(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        toast.error('인증번호를 불러올 수 없습니다.', {\r\n          position: 'top-right',\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const isStepOptional = (step: number) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = (step: number) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  if (!userData) {\r\n    return <Navigate to={'/'} />;\r\n  }\r\n  return (\r\n    <Box sx={{ minWidth: '1057px' }}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps: { completed?: boolean } = {};\r\n          const labelProps: {\r\n            optional?: React.ReactNode;\r\n          } = {};\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>\r\n                <Typography sx={{ color: 'black' }}>{label}</Typography>\r\n              </StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {activeStep === steps.length ? (\r\n        <React.Fragment>\r\n          <Typography sx={{ mt: 2, mb: 1 }}>모든 작업이 끝났습니다!</Typography>\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n            <Box sx={{ flex: '1 1 auto' }} />\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          {introduce[activeStep]}\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n            <Button color=\"inherit\" disabled={activeStep === 0} onClick={handleBack} sx={{ mr: 1 }}>\r\n              Back\r\n            </Button>\r\n            <Box sx={{ flex: '1 1 auto' }} />\r\n            {isStepOptional(activeStep) && (\r\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\r\n                Skip\r\n              </Button>\r\n            )}\r\n            {activeStep !== steps.length - 1 && <Button onClick={handleNext}>Next</Button>}\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst fetcher = async ([url, token]: string[]) => {\r\n  const res = await axios\r\n    .get(url, {\r\n      withCredentials: true,\r\n      headers: token\r\n        ? {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        : {},\r\n    })\r\n    .then((response) => response.data.data)\r\n    .catch((error) => null);\r\n  if (res === null) {\r\n    const error = new Error('errro');\r\n    throw error;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport default fetcher;\r\n"],"names":["DefaultValue","useState","value","setValue","useCallback","e","target","url","refreshToken","useSWR","localStorage","getItem","fetcher","onErrorRetry","err","key","config","revalidate","retryCount","axios","withCredentials","headers","Authorization","then","res","setItem","data","catch","error","tokenAxios","interceptors","response","use","i","Auth","navigate","useNavigate","accessToken","useCookies","token","useSWRRetry","userData","mutate","React","activeStep","setActiveStep","Set","skipped","setSkipped","randomCode","setRandomCode","steps","useInput","stoveUrl","onChangeStoveUrl","onClickCopyClipBoard","navigator","clipboard","writeText","toast","position","onSubmitAuthInfo","preventDefault","useTokenAxios","post","code","message","introduce","sx","mt","mb","onClick","window","open","readOnly","id","color","onSubmit","fullWidth","required","onChange","variant","type","useEffect","get","isStepOptional","step","isStepSkipped","has","minWidth","map","label","index","stepProps","labelProps","completed","length","display","flexDirection","pt","flex","disabled","prevActiveStep","mr","Error","prevSkipped","newSkipped","values","add","delete","to"],"sourceRoot":""}