{"version":3,"file":"401.js","mappings":"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","sources":["webpack://loatus_web/./node_modules/@mui/base/utils/appendOwnerState.js","webpack://loatus_web/./node_modules/@mui/base/utils/isHostComponent.js","webpack://loatus_web/./node_modules/@mui/base/utils/resolveComponentProps.js","webpack://loatus_web/./node_modules/@mui/base/utils/omitEventHandlers.js","webpack://loatus_web/./node_modules/@mui/base/utils/useSlotProps.js","webpack://loatus_web/./node_modules/@mui/base/utils/mergeSlotProps.js","webpack://loatus_web/./node_modules/@mui/base/utils/extractEventHandlers.js","webpack://loatus_web/./node_modules/@mui/utils/esm/usePreviousProps.js","webpack://loatus_web/./node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js","webpack://loatus_web/./node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js","webpack://loatus_web/./node_modules/@mui/base/BadgeUnstyled/useBadge.js","webpack://loatus_web/./node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js","webpack://loatus_web/./node_modules/@mui/material/Badge/badgeClasses.js","webpack://loatus_web/./node_modules/@mui/material/Badge/Badge.js","webpack://loatus_web/./node_modules/react-cookie/es6/useCookies.js","webpack://loatus_web/./node_modules/react-cookie/es6/utils.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from './isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nexport default function appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nexport default function resolveComponentProps(componentProps, ownerState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState);\n  }\n  return componentProps;\n}","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nexport default function omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"elementType\", \"externalSlotProps\", \"ownerState\"];\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport appendOwnerState from './appendOwnerState';\nimport mergeSlotProps from './mergeSlotProps';\nimport resolveComponentProps from './resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nexport default function useSlotProps(parameters) {\n  var _parameters$additiona;\n  const {\n      elementType,\n      externalSlotProps,\n      ownerState\n    } = parameters,\n    rest = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const resolvedComponentsProps = resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps(_extends({}, rest, {\n    externalSlotProps: resolvedComponentsProps\n  }));\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);\n  const props = appendOwnerState(elementType, _extends({}, mergedProps, {\n    ref\n  }), ownerState);\n  return props;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport extractEventHandlers from './extractEventHandlers';\nimport omitEventHandlers from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on an unstyled component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport default function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n    const mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming MUI Base) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nexport default function extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","import * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUnstyledUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/)\n *\n * API:\n *\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\n */\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n      component,\n      children,\n      max: maxProp = 99,\n      slotProps = {},\n      slots = {},\n      showZero = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || slots.root || 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Badge = slots.badge || 'span';\n  const badgeProps = useSlotProps({\n    elementType: Badge,\n    externalSlotProps: slotProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default BadgeUnstyled;","import { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base/api/use-badge/)\n */\nexport default function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import { isHostComponent } from '@mui/base';\nconst shouldSpreadAdditionalProps = Slot => {\n  return !Slot || !isHostComponent(Slot);\n};\nexport default shouldSpreadAdditionalProps;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component = 'span',\n      components = {},\n      componentsProps = {},\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    slots: {\n      root: RootSlot,\n      badge: BadgeSlot\n    },\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className),\n    slotProps: {\n      root: _extends({}, rootSlotProps, shouldSpreadAdditionalProps(RootSlot) && {\n        as: component,\n        ownerState: _extends({}, rootSlotProps == null ? void 0 : rootSlotProps.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, badgeSlotProps, {\n        className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n      }, shouldSpreadAdditionalProps(BadgeSlot) && {\n        ownerState: _extends({}, badgeSlotProps == null ? void 0 : badgeSlotProps.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import { useContext, useLayoutEffect, useState, useRef, useMemo } from 'react';\r\nimport CookiesContext from './CookiesContext';\r\nimport { isInBrowser } from './utils';\r\nexport default function useCookies(dependencies) {\r\n    var cookies = useContext(CookiesContext);\r\n    if (!cookies) {\r\n        throw new Error('Missing <CookiesProvider>');\r\n    }\r\n    var initialCookies = cookies.getAll();\r\n    var _a = useState(initialCookies), allCookies = _a[0], setCookies = _a[1];\r\n    var previousCookiesRef = useRef(allCookies);\r\n    if (isInBrowser()) {\r\n        useLayoutEffect(function () {\r\n            function onChange() {\r\n                var newCookies = cookies.getAll();\r\n                if (shouldUpdate(dependencies || null, newCookies, previousCookiesRef.current)) {\r\n                    setCookies(newCookies);\r\n                }\r\n                previousCookiesRef.current = newCookies;\r\n            }\r\n            cookies.addChangeListener(onChange);\r\n            return function () {\r\n                cookies.removeChangeListener(onChange);\r\n            };\r\n        }, [cookies]);\r\n    }\r\n    var setCookie = useMemo(function () { return cookies.set.bind(cookies); }, [cookies]);\r\n    var removeCookie = useMemo(function () { return cookies.remove.bind(cookies); }, [cookies]);\r\n    return [allCookies, setCookie, removeCookie];\r\n}\r\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\r\n    if (!dependencies) {\r\n        return true;\r\n    }\r\n    for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {\r\n        var dependency = dependencies_1[_i];\r\n        if (newCookies[dependency] !== oldCookies[dependency]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","export function isInBrowser() {\r\n    return (typeof window !== 'undefined' &&\r\n        typeof window.document !== 'undefined' &&\r\n        typeof window.document.createElement !== 'undefined');\r\n}\r\n"],"names":["appendOwnerState","elementType","otherProps","ownerState","undefined","element","resolveComponentProps","componentProps","omitEventHandlers","object","result","Object","keys","filter","prop","match","forEach","_excluded","useSlotProps","parameters","_parameters$additiona","externalSlotProps","rest","resolvedComponentsProps","props","mergedProps","internalRef","getSlotProps","additionalProps","externalForwardedProps","className","joinedClasses","mergedStyle","style","length","eventHandlers","excludeKeys","includes","extractEventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref","mergeSlotProps","useForkRef","value","current","getBadgeUnstyledUtilityClass","slot","generateUtilityClass","generateUtilityClasses","component","children","max","maxProp","slotProps","slots","showZero","other","badgeContent","displayValue","invisible","badgeContentProp","invisibleProp","prevProps","Number","useBadge","classes","root","badge","composeClasses","useUtilityClasses","Root","rootProps","Badge","badgeProps","Slot","isHostComponent","getBadgeUtilityClass","BadgeRoot","styled","name","overridesResolver","styles","position","display","verticalAlign","flexShrink","BadgeBadge","variant","capitalize","anchorOrigin","vertical","horizontal","overlap","color","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","bottom","left","leavingScreen","inProps","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","useThemeProps","anchorOriginProp","components","componentsProps","overlapProp","colorProp","variantProp","RootSlot","BadgeSlot","rootSlotProps","badgeSlotProps","as","useCookies","dependencies","cookies","useContext","CookiesContext","Error","initialCookies","getAll","_a","useState","allCookies","setCookies","previousCookiesRef","useRef","window","document","createElement","useLayoutEffect","onChange","newCookies","oldCookies","_i","dependencies_1","dependency","shouldUpdate","addChangeListener","removeChangeListener","useMemo","set","bind","remove"],"sourceRoot":""}