{"version":3,"file":"337.js","mappings":"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","sources":["webpack://loatus_web/./hooks/useInput.ts","webpack://loatus_web/./hooks/useToken.ts","webpack://loatus_web/./pages/Login/styles.tsx","webpack://loatus_web/./pages/Signup/index.tsx"],"sourcesContent":["import {useState, useCallback, ChangeEvent, Dispatch} from \"react\";\r\nimport React from \"react\";\r\n\r\ntype ReturnTypes<T = any> = [T, (e:any)=>void, Dispatch<React.SetStateAction<T>>];\r\nconst useInput = <T = any>(DefaultValue: T):ReturnTypes => {\r\n    const [value, setValue] = useState<T>(DefaultValue);\r\n    const onChangeValue = useCallback((e:any)=>{\r\n        setValue(e.target.value);\r\n    }, [setValue])\r\n    return [value, onChangeValue, setValue]\r\n}\r\n\r\nexport default useInput;","import { createStore } from 'swr-global-state';\r\n\r\nconst useToken = createStore<string | null>({\r\n  key: '@utils/token',\r\n  initial: '',\r\n});\r\n\r\nexport default useToken;\r\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  align-items: center;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 48px 0 40px;\n  width: 100%;\n`;\n\nexport const Root = styled.div`\n  align-items: center;\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n`;\n\nexport const Button = styled.button`\n  -webkit-tap-highlight-color: transparent;\n  align-items: center;\n  -webkit-appearance: none;\n  width: 100%;\n  max-width: 100%;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  text-align: center;\n  -webkit-user-select: none;\n  user-select: none;\n  white-space: nowrap;\n  box-shadow: none;\n  transition: all 80ms linear;\n  font-size: 18px;\n  font-weight: 700;\n  height: 44px;\n  min-width: 96px;\n  background-color: #fff;\n  border: 2.5px solid #000000;\n  color: #000000;\n  margin-bottom: 20px;\n`;\n\nexport const Hr = styled.hr`\n  border: none;\n  border-top: 1px solid #ddd;\n  clear: both;\n  flex-grow: 1;\n  margin: 0;\n`;\n\nexport const Horizon = styled.div`\n  align-items: center;\n  display: flex;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport const Page = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  flex-shrink: 0;\n  max-width: 800px;\n  width: 100%;\n  box-sizing: inherit;\n`;\n\nexport const PageHead = styled.h1`\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-size: 60px;\n  font-weight: 700;\n  letter-spacing: -0.75px;\n  line-height: 46px;\n  margin-bottom: 10px;\n  max-width: 700px;\n  text-align: center;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n`;\n\nexport const Input = styled.input`\n  padding: 11px 12px 13px;\n  height: 44px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid rgba(29, 28, 29, 0.3);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n`;\n\nexport const SignIn = styled.div`\n  font-size: 15px;\n  line-height: 1.46668;\n  font-weight: initial;\n  color: #1d1c1d;\n  font-variant-ligatures: common-ligatures;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  width: 400px;\n  & a {\n    text-decoration: none;\n  }\n`;\n","import React, { FormEvent, useCallback, useContext, useState } from 'react';\r\nimport { Button, Header, Horizon, Hr, Input, Page, PageHead, Root, SignIn } from '@pages/Login/styles';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport useInput from '@hooks/useInput';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\nimport { APIItem, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { Form } from 'react-bootstrap';\r\nimport useToken from '@hooks/useToken';\r\n\r\nconst Signup = () => {\r\n  const [email, onChangeEmail, setEmail] = useInput('');\r\n  const [password, , setPassword] = useInput('');\r\n  const [passwordCheck, , setPasswordCheck] = useInput('');\r\n  const [nickname, onChangeNickname, setNickname] = useInput('');\r\n  const [mismatchError, setMismatchError] = useState(false);\r\n  const [signupSuccess, setSignupSuccess] = useState(false);\r\n  const [accessToken] = useToken();\r\n  const {\r\n    data: userData,\r\n    error,\r\n    mutate,\r\n  } = useSWR<IUser | null>(accessToken ? ['/auth/my', accessToken] : null, fetcher);\r\n  const onChangePassword = useCallback(\r\n    (e: any) => {\r\n      setMismatchError(e.target.value === passwordCheck);\r\n      setPassword(e.target.value);\r\n    },\r\n    [passwordCheck],\r\n  );\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setMismatchError(e.target.value === password);\r\n      setPasswordCheck(e.target.value);\r\n    },\r\n    [password],\r\n  );\r\n\r\n  const onSubmitSignup = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      if (!email || !password || !mismatchError || !nickname) {\r\n        return;\r\n      }\r\n      axios\r\n        .post('/user/signup', {\r\n          email,\r\n          nickname,\r\n          password,\r\n        })\r\n        .then((response) => {\r\n          if (response.data.code === 200) {\r\n            toast.success(response.data.message, {\r\n              position: 'top-right',\r\n            });\r\n            setSignupSuccess(true);\r\n          } else {\r\n            toast.error(response.data.message, {\r\n              position: 'top-right',\r\n            });\r\n            return;\r\n          }\r\n          setEmail('');\r\n          setPassword('');\r\n          setPasswordCheck('');\r\n          setNickname('');\r\n          mutate();\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error('오류가 발생했습니다.\\n기술팀에 문의해 주세요!', {\r\n            position: 'top-right',\r\n          });\r\n          setSignupSuccess(false);\r\n        });\r\n    },\r\n    [email, password, passwordCheck, nickname],\r\n  );\r\n\r\n  if (userData) {\r\n    return <Navigate to={'/mainpage'} replace />;\r\n  }\r\n  return (\r\n    <Root>\r\n      <Header>\r\n        <div className=\"left-col\"></div>\r\n        <div className=\"center-col\">\r\n          <h1 style={{ textAlign: 'center', fontFamily: 'Noto Sans KR, sans-serif' }}>LOATUS</h1>\r\n        </div>\r\n        <div className=\"right-col\"></div>\r\n      </Header>\r\n      <Page>\r\n        <PageHead>회원가입{signupSuccess && '을 성공했습니다!'}</PageHead>\r\n        {signupSuccess ? (\r\n          <div>\r\n            <h4>지금 바로 로그인해 보세요</h4>\r\n            <Button>\r\n              <Link to={'/login'}>로그인 하러 가기</Link>\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <SignIn>\r\n            <Form onSubmit={onSubmitSignup}>\r\n              <Form.Label id=\"email-label\">이메일</Form.Label>\r\n              <Input required placeholder={'name@email.com'} type=\"email\" value={email} onChange={onChangeEmail} />\r\n              <Form.Label id=\"password-label\">비밀번호</Form.Label>\r\n              <Input required type=\"password\" value={password} onChange={onChangePassword} />\r\n              <Form.Label id=\"password-check-label\">비밀번호 확인</Form.Label>\r\n              <Input required type=\"password\" value={passwordCheck} onChange={onChangePasswordCheck} />\r\n              <Form.Label id=\"nickname-label\">닉네임</Form.Label>\r\n              <Input required type=\"text\" value={nickname} onChange={onChangeNickname} />\r\n              <Button type=\"submit\">회원가입</Button>\r\n              {password && !mismatchError && '비밀번호가 다릅니다!'}\r\n            </Form>\r\n            <Horizon>\r\n              <Hr />\r\n              <div style={{ padding: '0 20px' }}>또는</div>\r\n              <Hr />\r\n            </Horizon>\r\n            <Button>네이버로 계속</Button>\r\n            <Button>카카오로 계속</Button>\r\n            이미 Loatus 계정이 있으신가요?\r\n            <Link to=\"/login\">로그인하러 가기</Link>\r\n          </SignIn>\r\n        )}\r\n      </Page>\r\n      <ToastContainer />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"names":["DefaultValue","useState","value","setValue","useCallback","e","target","createStore","key","initial","Header","styled","Root","Button","Hr","Horizon","Page","PageHead","Input","SignIn","useInput","email","onChangeEmail","setEmail","password","setPassword","passwordCheck","setPasswordCheck","nickname","onChangeNickname","setNickname","mismatchError","setMismatchError","signupSuccess","setSignupSuccess","accessToken","useToken","useSWR","fetcher","userData","data","mutate","error","onChangePassword","onChangePasswordCheck","onSubmitSignup","preventDefault","axios","then","response","code","toast","message","position","catch","console","dir","to","replace","className","style","textAlign","fontFamily","onSubmit","id","required","placeholder","type","onChange","padding"],"sourceRoot":""}