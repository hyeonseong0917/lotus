{"version":3,"file":"161.js","mappings":"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","sources":["webpack://loatus_web/./pages/PostLists/index.tsx","webpack://loatus_web/./utils/fetcher.ts"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Carousel, Col, Form, InputGroup, Row, Table } from 'react-bootstrap';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { APIItem, IPost, IUser } from '@typings/db';\nimport axios from 'axios';\nimport {\n  Button,\n  CircularProgress,\n  Grid,\n  IconButton,\n  PaginationItem,\n  Paper,\n  Skeleton,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { Pagination } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router';\nimport ReactTimeAgo from 'react-time-ago';\n\nconst PostLists = () => {\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem('accessToken');\n  const [params, setParams] = useSearchParams();\n  const {\n    data: PostData,\n    error,\n    mutate,\n  } = useSWR<{ post: IPost[]; total: number }>(\n    [process.env.REACT_APP_DB_HOST + `/post/?page=${params.get('page') || 1}`, accessToken],\n    fetcher,\n  );\n\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setParams(`page=${value}`);\n  };\n\n  const onClickDelete = useCallback((post: IPost) => {\n    axios\n      .delete(process.env.REACT_APP_DB_HOST + `/post/delete/${post.pk}/`, {\n        headers: {\n          Authorization: 'Bearer ' + accessToken,\n        },\n      })\n      .then((response) => {\n        if (response.data.code <= 300) {\n          mutate();\n          toast.success(response.data.message);\n          return;\n        }\n        toast.error(response.data.message);\n      })\n      .catch((error) => {\n        toast.error(error.message);\n      });\n  }, []);\n\n  const onClickEdit = useCallback(async (post: IPost) => {\n    //모달 실행 후 입력 받기\n    await axios\n      .post(\n        process.env.REACT_APP_DB_HOST + `/post/edit/${post.pk}/`,\n        {\n          title: '바뀌나요',\n          content: '안바뀌나요',\n        },\n        {\n          headers: {\n            Authorization: 'Bearer ' + accessToken,\n          },\n        },\n      )\n      .then((response) => {\n        if (response.data.code <= 300) {\n          mutate();\n          toast.success(response.data.message);\n          return;\n        }\n        toast.error(response.data.message);\n      })\n      .catch((error) => {\n        toast.error(error.message);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Paper\n        elevation={3}\n        sx={{\n          margin: 'auto',\n          alignContent: 'center',\n          textAlign: 'center',\n          height: 500,\n        }}\n      >\n        <Typography\n          component=\"h1\"\n          sx={{\n            fontFamily: 'Noto Sans KR, sans-serif',\n            fontWeight: 900,\n            lineHeight: 1.25,\n            letterSpacing: '.9px',\n            color: 'inherit',\n            fontSize: '2.75rem',\n          }}\n        >\n          <ThumbUpAltIcon sx={{ fontWeight: 900, fontSize: '2.75rem' }} />\n          &nbsp; 안녕하세요\n        </Typography>\n        <Carousel style={{ margin: '25px' }}>\n          <Carousel.Item>\n            <img\n              className={'d-block w-100'}\n              src={\n                'https://w.namu.la/s/bab5cf7fddc14b6dce8d59e30e25c79bc8519072a57745aaff59239866ea5d217e51fbc224204a65fcdfd52a68df5303696ff7e023e497364ab60c06e35513b9065accc0762ee92daeca448a9f842239c751f12326c0d80815c5c68cd6476c092c4f07c9ed90b8e65f2ec8c59b67059b'\n              }\n              width={'800'}\n              height={'400'}\n              alt={'First slide'}\n            />\n            <Carousel.Caption>\n              <h3>글 쓸 사람</h3>\n              <p>나야 나 나야 나</p>\n            </Carousel.Caption>\n          </Carousel.Item>\n        </Carousel>\n      </Paper>\n      <Grid textAlign={'right'} sx={{ paddingTop: '1rem' }}>\n        <Button component={Link} to={'/board/write'} color={'primary'} variant=\"outlined\" startIcon={<AddIcon />}>\n          글쓰기\n        </Button>\n      </Grid>\n      <Table hover style={{ textAlign: 'center' }}>\n        <thead style={{ fontFamily: 'Noto Sans KR, sans-serif' }}>\n          <tr>\n            <th>No</th>\n            <th>TITLE</th>\n            <th>AUTHOR</th>\n            <th>PUBLISHED_DATE</th>\n            <th>MANAGEMENT</th>\n          </tr>\n        </thead>\n        <tbody>\n          {PostData ? (\n            PostData.post.map((post, key) => {\n              return (\n                <tr key={key} onClick={() => navigate(`/board/${post.pk}`)}>\n                  <td>{key}</td>\n                  <td style={{ width: '600px' }}>{post.fields.title}</td>\n                  <td>{post.fields.author}</td>\n                  <td>\n                    <ReactTimeAgo date={post.fields.published_date} />\n                  </td>\n                  <td>\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        navigate(`/board/edit/${post.pk}`);\n                      }}\n                      color={'inherit'}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onClickDelete(post);\n                      }}\n                      color={'inherit'}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td colSpan={6}>\n                <CircularProgress />\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {PostData && (\n        <Pagination\n          sx={{ justifyContent: 'center', display: 'flex' }}\n          count={Math.trunc(PostData.total / 10) + (PostData.total % 10 && 1)}\n          page={Number(params.get('page'))}\n          onChange={handleChange}\n          variant={'outlined'}\n          color={'primary'}\n          shape={'rounded'}\n          defaultPage={0}\n          renderItem={(item) => (\n            <PaginationItem component={Link} to={`/board/lists?page=${item.page}`} {...item} sx={{ color: 'black' }} />\n          )}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PostLists;\n","import axios from 'axios';\n\nconst fetcher = async ([url, token]: string[]) => {\n  const res = await axios\n    .get(url, {\n      withCredentials: false,\n      headers: token\n        ? {\n            Authorization: `Bearer ${token}`,\n          }\n        : {},\n    })\n    .then((response) => response.data.data)\n    .catch((error) => null);\n  if (res === null) {\n    const error = new Error('errro');\n    throw error;\n  }\n\n  return res;\n};\n\nexport default fetcher;\n"],"names":["i","navigate","useNavigate","accessToken","localStorage","getItem","useSearchParams","params","setParams","useSWR","process","get","fetcher","PostData","data","mutate","error","onClickDelete","useCallback","post","axios","pk","headers","Authorization","then","response","code","toast","message","catch","title","content","elevation","sx","margin","alignContent","textAlign","height","component","fontFamily","fontWeight","lineHeight","letterSpacing","color","fontSize","style","className","src","width","alt","paddingTop","Link","to","variant","startIcon","hover","map","key","onClick","fields","author","date","published_date","e","stopPropagation","colSpan","justifyContent","display","count","Math","trunc","total","page","Number","onChange","event","value","shape","defaultPage","renderItem","item","url","token","withCredentials","res","Error"],"sourceRoot":""}