{"version":3,"file":"829.js","mappings":"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","sources":["webpack://loatus_web/./hooks/useSWRRetry.ts","webpack://loatus_web/./components/Header/index.tsx","webpack://loatus_web/./layouts/MainPage/index.tsx","webpack://loatus_web/./utils/fetcher.ts"],"sourcesContent":["import useSWR from 'swr';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport { StateMutator } from 'swr-global-state';\r\n\r\nconst useSWRRetry = <T = any>(url: string | null, refreshToken: string) =>\r\n  useSWR<T | null>(\r\n    url && localStorage.getItem('accessToken') ? [url, localStorage.getItem('accessToken')] : null,\r\n    fetcher,\r\n    {\r\n      onErrorRetry: (err, key, config, revalidate, { retryCount }) => {\r\n        if (retryCount < 3) {\r\n          axios\r\n            .post(\r\n              process.env.REACT_APP_DB_HOST + '/auth/reissue',\r\n              {},\r\n              {\r\n                withCredentials: false,\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\r\n                  refreshToken: refreshToken,\r\n                },\r\n              },\r\n            )\r\n            .then((res) => {\r\n              localStorage.setItem('accessToken', res.data.data);\r\n            })\r\n            .catch((error) => error);\r\n        }\r\n      },\r\n    },\r\n  );\r\n\r\nexport default useSWRRetry;\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\nimport useToken from '@hooks/useToken';\r\nimport { useCookies } from 'react-cookie';\r\nimport useSWRRetry from '@hooks/useSWRRetry';\r\nimport { useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\nimport gravatar from 'gravatar';\r\n\r\nconst pages = [\r\n  { name: '파티구하기', param: '/channels' },\r\n  { name: '커뮤니티', param: '/board/lists' },\r\n  { name: '매칭', param: '/matching' },\r\n];\r\n\r\nfunction Header() {\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  const [token] = useCookies(['refreshToken']);\r\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n  const { data: userData, error, mutate } = useSWRRetry(process.env.REACT_APP_DB_HOST + '/auth/my', token.refreshToken);\r\n\r\n  const onClickLogout = useCallback(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_DB_HOST + '/auth/logout', {\r\n        headers: {\r\n          Authorization: 'Bearer ' + accessToken,\r\n        },\r\n        withCredentials: false,\r\n      })\r\n      .then((response) => {\r\n        toast.success(response.data.message, {\r\n          position: 'top-right',\r\n        });\r\n        mutate(null);\r\n      })\r\n      .catch((error) => {\r\n        toast.error('오류가 발생했습니다.\\n기술팀에 문의하세요!', {\r\n          position: 'top-right',\r\n        });\r\n      });\r\n  }, []);\r\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component={Link}\r\n            to=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'Noto Sans KR, sans-serif',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOATUS\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                component={Link}\r\n                key={page.name}\r\n                to={page.param}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page.name}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            {userData ? (\r\n              <>\r\n                <Tooltip title=\"Open settings\">\r\n                  <div>\r\n                    <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                      <Avatar\r\n                        alt={userData.characterName || userData.nickname}\r\n                        src={userData.profileImage || gravatar.url(userData.email, { s: '25', d: 'retro' })}\r\n                      />\r\n                      &nbsp;<span>{userData.characterName || userData.nickname}</span>\r\n                    </IconButton>\r\n                  </div>\r\n                </Tooltip>\r\n                <Menu\r\n                  sx={{ mt: '45px' }}\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorElUser}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={Boolean(anchorElUser)}\r\n                  onClose={handleCloseUserMenu}\r\n                >\r\n                  <MenuItem component={Link} to=\"/my\" onClick={handleCloseUserMenu}>\r\n                    <Typography textAlign=\"center\">프로필</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} to={userData.stoveNo ? '/select' : '/auth'} onClick={handleCloseUserMenu}>\r\n                    <Typography textAlign=\"center\">{userData.stoveNo ? '대표캐릭터 설정' : '인증'}</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem onClick={onClickLogout}>\r\n                    <Typography textAlign=\"center\">로그아웃</Typography>\r\n                  </MenuItem>\r\n                </Menu>\r\n              </>\r\n            ) : (\r\n              <Typography\r\n                textAlign=\"center\"\r\n                variant=\"h6\"\r\n                noWrap\r\n                component={Link}\r\n                to={'/login'}\r\n                sx={{\r\n                  mr: 2,\r\n                  display: { xs: 'none', md: 'flex' },\r\n                  fontFamily: 'Noto Sans KR, sans-serif',\r\n                  fontWeight: 700,\r\n                  letterSpacing: '.3rem',\r\n                  color: 'inherit',\r\n                  textDecoration: 'none',\r\n                }}\r\n              >\r\n                로그인\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Outlet } from 'react-router';\r\nimport Header from '@components/Header';\r\nimport { Container, createTheme, Grid, ThemeProvider } from '@mui/material';\r\n\r\nconst MainPage = () => {\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#525252',\r\n        contrastText: '#000000',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <Header />\r\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n          <Grid item style={{ paddingTop: '2rem' }}>\r\n            <Outlet />\r\n          </Grid>\r\n        </Grid>\r\n        <ToastContainer />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import axios from 'axios';\r\n\r\nconst fetcher = async ([url, token]: string[]) => {\r\n  const res = await axios\r\n    .get(url, {\r\n      withCredentials: false,\r\n      headers: token\r\n        ? {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        : {},\r\n    })\r\n    .then((response) => response.data.data)\r\n    .catch((error) => null);\r\n  if (res === null) {\r\n    const error = new Error('errro');\r\n    throw error;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport default fetcher;\r\n"],"names":["url","refreshToken","useSWR","localStorage","getItem","fetcher","onErrorRetry","err","key","config","revalidate","retryCount","axios","process","withCredentials","headers","Authorization","then","res","setItem","data","catch","error","pages","name","param","accessToken","token","useCookies","React","setAnchorElNav","anchorElUser","setAnchorElUser","useSWRRetry","userData","mutate","onClickLogout","useCallback","response","toast","message","position","handleCloseNavMenu","handleCloseUserMenu","AppBar","Container","maxWidth","Toolbar","disableGutters","Adb","sx","display","xs","md","mr","Typography","variant","noWrap","component","Link","to","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","map","page","Button","onClick","my","Tooltip","title","IconButton","event","currentTarget","p","Avatar","alt","characterName","nickname","src","profileImage","gravatar","email","s","d","Menu","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textAlign","stoveNo","darkTheme","createTheme","palette","primary","main","contrastText","ThemeProvider","theme","Grid","container","direction","justifyContent","alignItems","item","style","paddingTop","Error"],"sourceRoot":""}