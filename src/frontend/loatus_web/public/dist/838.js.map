{"version":3,"file":"838.js","mappings":"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","sources":["webpack://loatus_web/./hooks/useInput.ts","webpack://loatus_web/./hooks/useSWRRetry.ts","webpack://loatus_web/./hooks/useTokenAxios.ts","webpack://loatus_web/./pages/Auth/index.tsx","webpack://loatus_web/./utils/fetcher.ts"],"sourcesContent":["import {useState, useCallback, ChangeEvent, Dispatch} from \"react\";\r\nimport React from \"react\";\r\n\r\ntype ReturnTypes<T = any> = [T, (e:any)=>void, Dispatch<React.SetStateAction<T>>];\r\nconst useInput = <T = any>(DefaultValue: T):ReturnTypes => {\r\n    const [value, setValue] = useState<T>(DefaultValue);\r\n    const onChangeValue = useCallback((e:any)=>{\r\n        setValue(e.target.value);\r\n    }, [setValue])\r\n    return [value, onChangeValue, setValue]\r\n}\r\n\r\nexport default useInput;","import useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport { StateMutator } from 'swr-global-state';\n\nconst useSWRRetry = <T = any>(url: string | null, refreshToken: string) =>\n  useSWR<T | null>(\n    url && localStorage.getItem('accessToken') ? [url, localStorage.getItem('accessToken')] : null,\n    fetcher,\n    {\n      onErrorRetry: (err, key, config, revalidate, { retryCount }) => {\n        if (retryCount < 3) {\n          axios\n            .post(\n              process.env.REACT_APP_DB_HOST + '/auth/reissue',\n              {},\n              {\n                withCredentials: true,\n                headers: {\n                  Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                  refreshToken: refreshToken,\n                },\n              },\n            )\n            .then((res) => {\n              localStorage.setItem('accessToken', res.data.data);\n            })\n            .catch((error) => error);\n        }\n      },\n    },\n  );\n\nexport default useSWRRetry;\n","import axios from 'axios';\nimport { StateMutator } from 'swr-global-state';\n\nconst useTokenAxios = (refreshToken: string) => {\n  const tokenAxios = axios.create();\n  tokenAxios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      axios\n        .post(\n          process.env.REACT_APP_DB_HOST + '/auth/reissue',\n          {},\n          {\n            withCredentials: true,\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n              refreshToken: refreshToken,\n            },\n          },\n        )\n        .then((res) => {\n          localStorage.setItem('accessToken', res.data.data);\n        })\n        .catch((error) => error);\n    },\n  );\n  return tokenAxios;\n};\n\nexport default useTokenAxios;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { FormControl, FormHelperText, Input, InputLabel, StepContent, TextField } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport useTokenAxios from '@hooks/useTokenAxios';\nimport { AxiosResponse } from 'axios/index';\nimport { APIItem, lostarkInfo } from '@typings/db';\nimport { toast } from 'react-toastify';\nimport useToken from '@hooks/useToken';\nimport { useCookies } from 'react-cookie';\nimport useInput from '@hooks/useInput';\nimport CharacterSelect from '@components/CharacterSelect';\nimport useSWRRetry from '@hooks/useSWRRetry';\nimport { Navigate } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\n\nexport default function Auth() {\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem('accessToken');\n  const [token, setToken] = useCookies(['refreshToken']);\n  const { data: userData, error, mutate } = useSWRRetry(process.env.REACT_APP_DB_HOST + '/auth/my', token.refreshToken);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set<number>());\n  const [randomCode, setRandomCode] = useState('');\n  const steps = ['스토브 로그인', '소개글에 인증코드 게시', '인증하기'];\n  const [stoveUrl, onChangeStoveUrl, setStoveUrl] = useInput('');\n  const onClickCopyClipBoard = useCallback(async () => {\n    if (!randomCode) {\n      return;\n    }\n    try {\n      await navigator.clipboard.writeText(randomCode);\n      toast.success('인증코드가 클립보드에 복사되었습니다', {\n        position: 'top-right',\n      });\n    } catch (e) {\n      toast.error('복사에 실패했습니다.', {\n        position: 'top-right',\n      });\n    }\n  }, [randomCode]);\n  const onSubmitAuthInfo = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      useTokenAxios(token.refreshToken)\n        .post(\n          process.env.REACT_APP_DB_HOST + '/auth/stove',\n          {\n            randomCode,\n            stoveUrl,\n          },\n          {\n            withCredentials: true,\n            headers: {\n              Authorization: 'Bearer ' + accessToken,\n            },\n          },\n        )\n        .then((response: AxiosResponse<APIItem<lostarkInfo[]>>) => {\n          if (response.data.code === 200) {\n            toast.success(response.data.message, {\n              position: 'top-right',\n            });\n          } else {\n            toast.error(response.data.message, {\n              position: 'top-right',\n            });\n            return;\n          }\n          mutate();\n          navigate('/select');\n        })\n        .catch((error) => {\n          toast.error('오류가 발생했습니다.\\n기술팀에 문의해주세요!', {\n            position: 'top-right',\n          });\n        });\n    },\n    [randomCode, stoveUrl],\n  );\n  const introduce = [\n    <>\n      <Typography sx={{ mt: 2, mb: 1 }}>스토브 사이트에서 로그인해주세요</Typography>\n      <Button onClick={() => window.open('https://www.onstove.com/')}>스토브 가기</Button>\n    </>,\n    <>\n      <Typography sx={{ mt: 2, mb: 1 }}>소개글에 아래의 인증코드를 게시해주세요</Typography>\n      <Input readOnly id=\"component-disabled\" value={randomCode || '값을 불러올 수 없습니다'} sx={{ color: 'gray' }} />\n      <Button onClick={onClickCopyClipBoard}>복사</Button>\n    </>,\n    <>\n      <Typography sx={{ mt: 2, mb: 1 }}>소개글을 게시한 타임라인 url을 입력하고 인증하기를 눌러주세요</Typography>\n      <form onSubmit={onSubmitAuthInfo}>\n        <FormControl fullWidth required>\n          <TextField onChange={onChangeStoveUrl} value={stoveUrl} variant={'filled'} />\n          <Button type=\"submit\">인증하기</Button>\n        </FormControl>\n      </form>\n    </>,\n  ];\n\n  useEffect(() => {\n    useTokenAxios(token.refreshToken)\n      .get('/auth/randomcode', {\n        withCredentials: true,\n        headers: {\n          Authorization: 'Bearer ' + accessToken,\n        },\n      })\n      .then((response: AxiosResponse<APIItem<string>>) => {\n        setRandomCode(response.data.data);\n      })\n      .catch((error) => {\n        toast.error('인증번호를 불러올 수 없습니다.', {\n          position: 'top-right',\n        });\n      });\n  }, []);\n\n  const isStepOptional = (step: number) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step: number) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  if (!userData) {\n    return <Navigate to={'/'} />;\n  }\n  return (\n    <Box sx={{ minWidth: '1057px' }}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps: { completed?: boolean } = {};\n          const labelProps: {\n            optional?: React.ReactNode;\n          } = {};\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>\n                <Typography sx={{ color: 'black' }}>{label}</Typography>\n              </StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>모든 작업이 끝났습니다!</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Box sx={{ flex: '1 1 auto' }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          {introduce[activeStep]}\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Button color=\"inherit\" disabled={activeStep === 0} onClick={handleBack} sx={{ mr: 1 }}>\n              Back\n            </Button>\n            <Box sx={{ flex: '1 1 auto' }} />\n            {isStepOptional(activeStep) && (\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                Skip\n              </Button>\n            )}\n            {activeStep !== steps.length - 1 && <Button onClick={handleNext}>Next</Button>}\n          </Box>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n}\n","import axios from 'axios';\r\n\r\nconst fetcher = async ([url, token]: string[]) => {\r\n  const res = await axios\r\n    .get(url, {\r\n      withCredentials: true,\r\n      headers: token\r\n        ? {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        : {},\r\n    })\r\n    .then((response) => response.data.data)\r\n    .catch((error) => null);\r\n  if (res === null) {\r\n    const error = new Error('errro');\r\n    throw error;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport default fetcher;\r\n"],"names":["DefaultValue","useState","value","setValue","useCallback","e","target","url","refreshToken","useSWR","localStorage","getItem","fetcher","onErrorRetry","err","key","config","revalidate","retryCount","axios","process","env","REACT_APP_DB_HOST","withCredentials","headers","Authorization","then","res","setItem","data","catch","error","tokenAxios","interceptors","response","use","i","Auth","navigate","useNavigate","accessToken","useCookies","token","useSWRRetry","userData","mutate","React","activeStep","setActiveStep","Set","skipped","setSkipped","randomCode","setRandomCode","steps","useInput","stoveUrl","onChangeStoveUrl","onClickCopyClipBoard","navigator","clipboard","writeText","toast","position","onSubmitAuthInfo","preventDefault","useTokenAxios","post","code","message","introduce","sx","mt","mb","onClick","window","open","readOnly","id","color","onSubmit","fullWidth","required","onChange","variant","type","useEffect","get","isStepOptional","step","isStepSkipped","has","minWidth","map","label","index","stepProps","labelProps","completed","length","display","flexDirection","pt","flex","disabled","prevActiveStep","mr","Error","prevSkipped","newSkipped","values","add","delete","to"],"sourceRoot":""}